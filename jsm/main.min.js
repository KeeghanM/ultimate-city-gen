const cuteAlert=({type,title,message,img,buttonText="OK",confirmText="OK",vibrate=[],playSound=null,cancelText="Cancel",closeStyle})=>new Promise(resolve=>{var script,existingAlert=document.querySelector(".alert-wrapper"),existingAlert=(existingAlert&&existingAlert.remove(),document.querySelector("body"));let src="";for(script of document.getElementsByTagName("script"))script.src.includes("cute-alert.js")&&(src=script.src.substring(0,script.src.lastIndexOf("/")));let btnTemplate="question"===type?`
      <div class="question-buttons">
        <button class="confirm-button ${type}-bg ${type}-btn">${confirmText}</button>
        <button class="cancel-button error-bg error-btn">${cancelText}</button>
      </div>
      `:`
    <button class="alert-button ${type}-bg ${type}-btn">${buttonText}</button>
    `;0<vibrate.length&&navigator.vibrate(vibrate),null!==playSound&&new Audio(playSound).play();var template=`
    <div class="alert-wrapper">
      <div class="alert-frame">
        ${void 0===img?'<div class="alert-header '+type+'-bg">':'<div class="alert-header-base">'}
          <span class="alert-close ${"circle"===closeStyle?"alert-close-circle":"alert-close-default"}">X</span>
          ${void 0===img?'<img class="alert-img" src="'+src+"/img/"+type+'.svg" />':'<div class="custom-img-wrapper">'+img+"</div>"}
        </div>
        <div class="alert-body">
          <span class="alert-title">${title}</span>
          <span class="alert-message">${message}</span>
          ${btnTemplate}
        </div>
      </div>
    </div>
    `;existingAlert.insertAdjacentHTML("afterend",template);const alertWrapper=document.querySelector(".alert-wrapper");var confirmButton,cancelButton,existingAlert=document.querySelector(".alert-frame"),template=document.querySelector(".alert-close");"question"===type?(confirmButton=document.querySelector(".confirm-button"),cancelButton=document.querySelector(".cancel-button"),confirmButton.addEventListener("click",()=>{alertWrapper.remove(),resolve("confirm")}),cancelButton.addEventListener("click",()=>{alertWrapper.remove(),resolve()})):document.querySelector(".alert-button").addEventListener("click",()=>{alertWrapper.remove(),resolve("ok")}),template.addEventListener("click",()=>{alertWrapper.remove(),resolve("close")}),existingAlert.addEventListener("click",e=>{e.stopPropagation()})}),cuteToast=({type,title,message,timer=5e3,vibrate=[],playSound=null})=>new Promise(resolve=>{var script,body=document.querySelector("body");let src="";for(script of document.getElementsByTagName("script"))script.src.includes("cute-alert.js")&&(src=script.src.substring(0,script.src.lastIndexOf("/")));let templateContainer=document.querySelector(".toast-container");templateContainer||(body.insertAdjacentHTML("afterend",'<div class="toast-container"></div>'),templateContainer=document.querySelector(".toast-container"));var body=id(),templateContent=`
    <div class="toast-content ${type}-bg" id="${body}-toast-content">
      <div>
        <div class="toast-frame">
          <div class="toast-body">
            <img class="toast-body-img" src="${src}/img/${type}.svg" />'
            <div class="toast-body-content">
              <span class="toast-title">${title}</span>
              <span class="toast-message">${message}</span>
            </div>
            <div class="toast-close" id="${body}-toast-close">X</div>
          </div>
        </div>
        <div class="toast-timer ${type}-timer"  style="animation: timer${timer}ms linear;>
      </div>
    </div>
    `,toasts=document.querySelectorAll(".toast-content");toasts.length?toasts[0].insertAdjacentHTML("beforebegin",templateContent):templateContainer.innerHTML=templateContent;const toastContent=document.getElementById(body+"-toast-content");0<vibrate.length&&navigator.vibrate(vibrate),null!==playSound&&new Audio(playSound).play(),setTimeout(()=>{toastContent.remove(),resolve()},timer),document.getElementById(body+"-toast-close").addEventListener("click",()=>{toastContent.remove(),resolve()})}),id=()=>"_"+Math.random().toString(36).substr(2,9);if(url)for(var toastTypes=["success","error","warning","info","question"],src=["https://svgshare.com/i/jVz.svg","https://svgshare.com/i/jUv.svg","https://svgshare.com/i/jW0.svg","https://svgshare.com/i/jWA.svg","https://svgshare.com/i/jUw.svg"],i=0;i<document.getElementsByClassName("alert-img").length;i++)for(var j=0;j<toastTypes.length;j++)document.getElementsByClassName("alert-img")[i].parentElement.classList.contains(toastTypes[j]+"-bg")&&(document.getElementsByClassName("alert-img")[i].src=src[j]);let grid_width,grid_height,cell_size,building_check_x,building_check_y,min_road_x,min_road_y,selected_building,current_status,road_add_size=0,grid=[],buildings=[],miners=[],generation_step="roads",btn_generate_city,btn_draw_roads,btn_generate_buildings,btn_generate_people,btn_confirm_city,btn_save,btn_load,btn_open_city_details,label_load,size_slider,town_name,panes=[],color_dark="hsl(221,28%,20%)",color_medium="hsl(219,27%,25%)",color_light="hsl(219,10%,75%)",color_accent_light="hsl(21,58%,38%)",color_accent_dark="hsl(21,59%,26%)",color_success="hsl(172,58%,38%)",color_error="hsl(0,58%,38%)",color_parchment="hsl(44,43%,78%)",root=document.querySelector(":root");function windowResized(){resizeCanvas(windowWidth,windowHeight)}function download(content,fileName,contentType){var a=document.createElement("a"),content=new Blob([content],{type:contentType});a.href=URL.createObjectURL(content),a.download=fileName,a.click()}function indexFromXY(x,y){return grid_width*x+y}function clamp(num,min,max){return Math.min(Math.max(num,min),max)}function sortPointsClockwise(points){let non_dupe_points=removeDupes(points);const center=non_dupe_points.reduce((acc,{x,y})=>(acc.x+=x/non_dupe_points.length,acc.y+=y/non_dupe_points.length,acc),{x:0,y:0});var point,points=non_dupe_points.map(({x,y})=>({x:x,y:y,angle:180*Math.atan2(y-center.y,x-center.x)/Math.PI})).sort((a,b)=>a.angle-b.angle);for(point of points)delete point.angle;return points}function removeDupes(input_array){let unique_array=[];return input_array.forEach(input_element=>{unique_array.some(unique_element=>unique_element.x===input_element.x&&unique_element.y===input_element.y)||unique_array.push(input_element)}),unique_array}function distanceBetween(x1,y1,x2,y2){x1-=x2,x2=y1-y2;return Math.sqrt(x1*x1+x2*x2)}function pointInPolygon(x,y,poly){for(var inside=!1,i=0,j=poly.length-1;i<poly.length;j=i++){var xi=poly[i].x,yi=poly[i].y,xj=poly[j].x,yj=poly[j].y;y<yi!=y<yj&&x<(xj-xi)*(y-yi)/(yj-yi)+xi&&(inside=!inside)}return inside}root.style.setProperty("--color_dark",color_dark),root.style.setProperty("--color_medium",color_medium),root.style.setProperty("--color_light",color_light),root.style.setProperty("--color_accent_light",color_accent_light),root.style.setProperty("--color_accent_dark",color_accent_dark),root.style.setProperty("--color_success",color_success),root.style.setProperty("--color_error",color_error),root.style.setProperty("--color_parchment",color_parchment);const zoomSensitivity=.1;let currentScale=1,transformX=0,transformY=0,isMouseDragged=!1,mousePressedX=null,mousePressedY=null;const mouseDragDetectionThreshold=10;let UI_BAR_HEIGHT=100,selected_pane=void 0;function mousePressed(){loop(),mousePressedX=mouseX,mousePressedY=mouseY;for(let i=panes.length-1;0<=i;i--){var pane=panes[i];if(pane.clicked()){pane.moveToTop(),pane.setOffset(mouseX,mouseY),selected_pane=pane;break}}}function mouseWheel(event){return loop(),keyIsDown(CONTROL)?zoomScroll(event):"draw_roads"==current_status&&changeRoadAddSize(event),!1}function mouseDragged(){selected_pane?(selected_pane.setPosition(mouseX,mouseY),selected_pane.moveToTop()):dist(mousePressedX,mousePressedY,mouseX,mouseY)>mouseDragDetectionThreshold&&mouseY>UI_BAR_HEIGHT&&(isMouseDragged=!0,transformX+=mouseX-pmouseX,transformY+=mouseY-pmouseY)}function mouseReleased(){!isMouseDragged&&mouseY>UI_BAR_HEIGHT&&registeredClick(mouseButton),mousePressedX=null,mousePressedY=null,isMouseDragged=!1,selected_pane=void 0,"draw_roads"!=current_status&&noLoop()}function zoomScroll(event){let scaleFactor=null;scaleFactor=event.delta<0?1+zoomSensitivity:1-zoomSensitivity,currentScale*=scaleFactor,transformX=mouseX-mouseX*scaleFactor+transformX*scaleFactor,transformY=mouseY-mouseY*scaleFactor+transformY*scaleFactor}function saveToJson(){var town={grid:grid,buildings:buildings,name:town_name.value()};download(JSON.stringify(town),town_name.value()+".json","text/plain")}function loadFromJson(file){if("json"===file.subtype){file=file.data;if(file.buildings&&file.grid&&file.name){grid=file.grid,town_name.value(file.name),buildings=[];for(var loaded_building of file.buildings){var new_building=new Building;new_building.type=loaded_building.type,new_building.points=loaded_building.points,new_building.roof_lines=loaded_building.roof_lines,new_building.roof_points=loaded_building.roof_points,new_building.color=loaded_building.color,buildings.push(new_building)}confirmCity(),redraw()}}}const ROOF_COLORS=["#634902","#632805","#5e2c0e","#57321d","#4a220c","#451c1a","#8f342f","#695b3d"];class Building{constructor(cell){cell&&(this.cells=[{x:cell.x,y:cell.y}]),this.type="",this.points=[],this.corners=[],this.roof_lines=[],this.roof_points=[],this.color=ROOF_COLORS[Math.floor(Math.random()*ROOF_COLORS.length)]}draw(){fill(this==selected_building?"#0096FF":this.color),stroke(0),strokeWeight(.5),beginShape();for(var point of this.points)vertex(point.x,point.y);endShape(CLOSE);for(var roof_line of this.roof_lines)line(roof_line.start_x,roof_line.start_y,roof_line.end_x,roof_line.end_y);if(1<this.roof_points.length)for(let i=0;i<this.roof_points.length-1;i++){let point=this.roof_points[i];var next_point=this.roof_points[i+1];line(point.x,point.y,next_point.x,next_point.y)}}}class Pane{constructor(options){this.offset={x:0,y:0};var x=options.x||0,y=options.y||UI_BAR_HEIGHT;this.type=options.type,this.pos={x:x,y:y},this.name=options.name,this.width=options.width||450,this.height=options.height||windowHeight-2*UI_BAR_HEIGHT,this.components_container=createElement("div",""),this.setupComponents(options),this.setPosition(this.pos.x,this.pos.y)}clicked(){return mouseX>this.pos.x&&mouseX<this.pos.x+this.width&&mouseY>this.pos.y&&mouseY<this.pos.y+this.height}moveToTop(){panes.splice(panes.indexOf(this),1),panes.push(this);for(let i=panes.length-1;0<=i;i--)panes[i].components_container.style("z-index",10*i)}setOffset(mouseX,mouseY){this.offset={x:mouseX-this.pos.x,y:mouseY-this.pos.y}}setPosition(newX,newY){newX=clamp(newX-this.offset.x,0,windowWidth-this.width),newY=clamp(newY-this.offset.y,UI_BAR_HEIGHT,windowHeight-50);this.pos={x:newX,y:newY},this.components_container.position(this.pos.x,this.pos.y)}setupComponents(options){this.components_container.style("width",this.width+"px"),this.components_container.style("height",this.height+"px"),this.components_container.addClass("pane_container");var component,first_row=createElement("div",""),title=(first_row.addClass("pane_first_row"),createElement("div",this.name)),button_close=(title.addClass("pane_title"),createElement("button","X"));button_close.addClass("pane_close"),button_close.mouseClicked(()=>this.destroy()),first_row.child(title),first_row.child(button_close),this.components_container.child(first_row);for(component of options.components){var component_container=createElement("div",""),component_label=(component_container.addClass("pane_component_container"),createElement("span",component.label+":"));component_label.addClass("component_label");let component_value;"text"==component.type&&(component_value=createElement("span",component.value)),component_container.child(component_label),component_container.child(component_value),this.components_container.child(component_container)}this.moveToTop()}destroy(){panes.splice(panes.indexOf(this),1),this.components_container.remove(),panes.splice(panes.indexOf(this),1)}}function closeExistingPanes(pane_type){let was_open=!1;for(var pane of panes)pane.type==pane_type&&(pane.destroy(),was_open=!0);return was_open}function openCityDetail(){panes.push(new Pane({type:"city_details",name:town_name.value(),components:[{label:"Population",type:"text",value:Math.round(2.5*buildings.length).toString()}]}))}function openBuildingDetail(building){panes.push(new Pane({type:"building_details",name:"Address",width:300,height:300,components:[{type:"text",label:"Type",value:building.type}]}))}const ROAD_COLORS=["#505557","#404547","#4d5254","#535b5e","#545657"],SPAWN_CHANCE=20,DEATH_CHANCE=5,TURN_CHANCE=10,MIN_MINED=100;let MAX_MINED;const MAX_MINERS=10;let mined_cell_count;function generateRoads(){MAX_MINED=grid_width*grid_height/32,mined_cell_count=0,grid=[],miners=[],buildings=[],btn_draw_roads.addClass("click_me"),miners.push({x:grid_width/2,y:grid_height/2,direction:0}),miners.push({x:grid_width/2,y:grid_height/2,direction:1}),miners.push({x:grid_width/2,y:grid_height/2,direction:2}),miners.push({x:grid_width/2,y:grid_height/2,direction:3});for(let x=0;x<grid_width;x++)for(let y=0;y<grid_height;y++)grid.push({x:x,y:y,type:"dirt"});for(;0<miners.length&&mined_cell_count<MAX_MINED;)for(let miner of miners){if(mined_cell_count>=MAX_MINED)return building_check_x=min_road_x,void(building_check_y=min_road_y);var x_to_check=clamp(miner.x,0,grid_width-1),y_to_check=clamp(miner.y,0,grid_height-1);"dirt"==grid[indexFromXY(x_to_check,y_to_check)].type&&(grid[indexFromXY(x_to_check,y_to_check)].type="road",grid[indexFromXY(x_to_check,y_to_check)].color=ROAD_COLORS[Math.floor(Math.random()*ROAD_COLORS.length)],mined_cell_count++,x_to_check<min_road_x&&(min_road_x=x_to_check),y_to_check<min_road_y)&&(min_road_y=y_to_check),100*Math.random()<DEATH_CHANCE&&mined_cell_count>MIN_MINED||0==miner.x||0==miner.y||miner.x==grid_width-1||miner.y==grid_height-1?miners=miners.filter(miner_to_check=>miner_to_check!=miner):(100*Math.random()<SPAWN_CHANCE&&miners.length<MAX_MINERS&&miners.push({x:miner.x,y:miner.y}),100*Math.random()<TURN_CHANCE&&(miner.dir=Math.floor(4*Math.random())+0),0==miner.dir&&clamp(miner.y--,0,grid_height),1==miner.dir&&clamp(miner.x++,0,grid_width),2==miner.dir&&clamp(miner.y++,0,grid_height),3==miner.dir&&clamp(miner.x--,0,grid_width))}}function changeRoadAddSize(event){road_add_size=event.deltaY<0?clamp(road_add_size+1,0,2):clamp(road_add_size-1,0,2)}function drawRoad(t_mouseX,t_mouseY){btn_generate_buildings.removeAttribute("disabled",""),btn_generate_buildings.addClass("click_me");var cell,t_mouseX=Math.floor(t_mouseX/cell_size),t_mouseY=Math.floor(t_mouseY/cell_size),cells_to_update=[];cells_to_update.push(grid[indexFromXY(t_mouseX,t_mouseY)]),1<=road_add_size&&(cells_to_update.push(grid[indexFromXY(t_mouseX-1,t_mouseY-1)]),cells_to_update.push(grid[indexFromXY(t_mouseX,t_mouseY-1)]),cells_to_update.push(grid[indexFromXY(t_mouseX+1,t_mouseY-1)]),cells_to_update.push(grid[indexFromXY(t_mouseX+1,t_mouseY)]),cells_to_update.push(grid[indexFromXY(t_mouseX+1,t_mouseY+1)]),cells_to_update.push(grid[indexFromXY(t_mouseX,t_mouseY+1)]),cells_to_update.push(grid[indexFromXY(t_mouseX-1,t_mouseY+1)]),cells_to_update.push(grid[indexFromXY(t_mouseX-1,t_mouseY)])),2==road_add_size&&(cells_to_update.push(grid[indexFromXY(t_mouseX-2,t_mouseY-2)]),cells_to_update.push(grid[indexFromXY(t_mouseX-1,t_mouseY-2)]),cells_to_update.push(grid[indexFromXY(t_mouseX,t_mouseY-2)]),cells_to_update.push(grid[indexFromXY(t_mouseX+1,t_mouseY-2)]),cells_to_update.push(grid[indexFromXY(t_mouseX+2,t_mouseY-2)]),cells_to_update.push(grid[indexFromXY(t_mouseX+2,t_mouseY-1)]),cells_to_update.push(grid[indexFromXY(t_mouseX+2,t_mouseY)]),cells_to_update.push(grid[indexFromXY(t_mouseX+2,t_mouseY+1)]),cells_to_update.push(grid[indexFromXY(t_mouseX+2,t_mouseY+2)]),cells_to_update.push(grid[indexFromXY(t_mouseX+1,t_mouseY+2)]),cells_to_update.push(grid[indexFromXY(t_mouseX,t_mouseY+2)]),cells_to_update.push(grid[indexFromXY(t_mouseX-1,t_mouseY+2)]),cells_to_update.push(grid[indexFromXY(t_mouseX-2,t_mouseY+2)]),cells_to_update.push(grid[indexFromXY(t_mouseX-2,t_mouseY+1)]),cells_to_update.push(grid[indexFromXY(t_mouseX-2,t_mouseY)]),cells_to_update.push(grid[indexFromXY(t_mouseX-2,t_mouseY-1)]));for(cell of cells_to_update)keyIsDown(SHIFT)?cell.type="dirt":(cell.type="road",cell.color=ROAD_COLORS[Math.floor(Math.random()*ROAD_COLORS.length)])}const BUILDING_CHANCE=50,BUSINESS_RATIO=20,GROW_CHANCE=15,TAVERN_CHANCE=5,MAX_TAVERNS=Math.max(Math.floor(MAX_MINED/150),1);let tavern_count;function generateBuildings(){for(tavern_count=0,buildings=[],building_check_x=min_road_x,building_check_y=min_road_y;building_check_x<grid_width&&building_check_y<grid_height;){var cell=grid[indexFromXY(building_check_x,building_check_y)];if(++building_check_x==grid_width&&(building_check_x=min_road_x,building_check_y++),"dirt"==cell.type&&!(100*Math.random()>BUILDING_CHANCE||"road"!=grid[indexFromXY(clamp(cell.x+1,0,grid_width-1),cell.y)].type&&"road"!=grid[indexFromXY(cell.x,clamp(cell.y+1,0,grid_height-1))].type&&"road"!=grid[indexFromXY(clamp(cell.x-1,0,grid_width-1),cell.y)].type&&"road"!=grid[indexFromXY(cell.x,clamp(cell.y-1,0,grid_height-1))].type)){let type;100*Math.random()<TAVERN_CHANCE&&tavern_count<MAX_TAVERNS?(type="tavern",tavern_count++):type=100*Math.random()<BUSINESS_RATIO?"business":"house";var building_cell,building=new Building(cell);building.type=type;let grow_modifier=0;"tavern"==building.type&&(grow_modifier=50),"dirt"==grid[indexFromXY(clamp(cell.x+1,0,grid_width-1),cell.y)].type&&100*Math.random()<GROW_CHANCE+grow_modifier&&building.cells.push({x:clamp(cell.x+1,0,grid_width-1),y:cell.y}),"dirt"==grid[indexFromXY(cell.x,clamp(cell.y+1,0,grid_height-1))].type&&100*Math.random()<GROW_CHANCE+grow_modifier&&building.cells.push({x:cell.x,y:clamp(cell.y+1,0,grid_height-1)}),"dirt"==grid[indexFromXY(clamp(cell.x-1,0,grid_width-1),cell.y)].type&&100*Math.random()<GROW_CHANCE+grow_modifier&&building.cells.push({x:clamp(cell.x-1,0,grid_width-1),y:cell.y}),"dirt"==grid[indexFromXY(cell.x,clamp(cell.y-1,0,grid_height-1))].type&&100*Math.random()<GROW_CHANCE+grow_modifier&&building.cells.push({x:cell.x,y:clamp(cell.y-1,0,grid_height-1)});for(building_cell of building.cells)grid[indexFromXY(building_cell.x,building_cell.y)].type="building",building.points.push({x:building_cell.x*cell_size,y:building_cell.y*cell_size}),building.points.push({x:building_cell.x*cell_size+cell_size,y:building_cell.y*cell_size}),building.points.push({x:building_cell.x*cell_size+cell_size,y:building_cell.y*cell_size+cell_size}),building.points.push({x:building_cell.x*cell_size,y:building_cell.y*cell_size+cell_size});building.points=sortPointsClockwise(building.points);for(let i=0;i<building.points.length;i++){var point=building.points[i],point_one_ahead=building.points[i+1>=building.points.length?i+1-building.points.length:i+1],point_one_behind=building.points[i-1<0?i-1+building.points.length:i-1];point_one_behind.x!=point_one_ahead.x&&point_one_behind.y!=point_one_ahead.y&&(building.corners.push(point),line_end={x:point.x,y:point.y},point_one_ahead.x>point.x&&point_one_ahead.y==point.y&&point_one_behind.x==point.x&&point_one_behind.y>point.y?(line_end.x+=cell_size/2,line_end.y+=cell_size/2):point_one_ahead.x==point.x&&point_one_ahead.y>point.y&&point_one_behind.x<point.x&&point_one_behind.y==point.y?(line_end.x-=cell_size/2,line_end.y+=cell_size/2):point_one_ahead.x<point.x&&point_one_ahead.y==point.y&&point_one_behind.x==point.x&&point_one_behind.y<point.y?(line_end.x-=cell_size/2,line_end.y-=cell_size/2):point_one_ahead.x==point.x&&point_one_ahead.y<point.y&&point_one_behind.x>point.x&&point_one_behind.y==point.y?(line_end.x+=cell_size/2,line_end.y-=cell_size/2):point_one_ahead.x==point.x&&point_one_ahead.y>point.y&&point_one_behind.x>point.x&&point_one_behind.y==point.y?(line_end.x-=cell_size/2,line_end.y-=cell_size/2):point_one_ahead.x>point.x&&point_one_ahead.y==point.y&&point_one_behind.x==point.x&&point_one_behind.y<point.y?(line_end.x-=cell_size/2,line_end.y+=cell_size/2):point_one_ahead.x==point.x&&point_one_ahead.y<point.y&&point_one_behind.x<point.x&&point_one_behind.y==point.y?(line_end.x+=cell_size/2,line_end.y+=cell_size/2):point_one_ahead.x<point.x&&point_one_ahead.y==point.y&&point_one_behind.x==point.x&&point_one_behind.y>point.y&&(line_end.x+=cell_size/2,line_end.y-=cell_size/2),building.roof_lines.push({start_x:point.x,start_y:point.y,end_x:line_end.x,end_y:line_end.y}),building.roof_points.push({x:line_end.x,y:line_end.y}))}delete building.corners,delete building.cells,buildings.push(building)}}btn_draw_roads.attribute("disabled",""),btn_confirm_city.removeAttribute("disabled",""),btn_generate_buildings.removeClass("click_me"),btn_draw_roads.removeClass("click_me"),current_status="city_finished"}function GenerateDistrictName(){var nm1=["b","c","d","f","g","h","l","m","n","p","r","s","t","w","y","b","c","d","f","g","h","j","k","l","m","n","p","q","r","s","t","v","w","x","y","z","bl","br","ch","cl","cr","dr","fl","fr","gl","gr","pl","pr","sc","sh","sk","sl","sm","sn","sp","st","sw","tr","tw","wh","wr","sch","scr","sph","shr","spl","spr","str","thr"],nm2=["a","e","i","o","u","a","e","i","o","u","a","e","i","o","u","a","e","i","o","u","a","e","i","o","u","ai","eo","ea","ee","oo","oa","ia","io"],nm3=["br","bl","c","ch","cl","ct","ck","cc","d","dg","dw","dr","dl","f","g","gg","gl","gw","gr","h","k","kr","kw","l","ll","lb","ld","lg","lm","ln","lr","lw","lz","m","mr","ml","nw","n","nn","ng","nl","p","ph","r","rb","rc","rd","rg","rl","rm","rn","rr","rs","rst","rt","rth","rtr","rw","rv","s","ss","sh","st","sth","str","sl","sw","t","tb","tl","tg","tm","tn","tw","th","tt","v","w","wl","wn","x","z"],nm4=["c","d","f","ff","g","gg","h","l","ll","m","mm","n","nn","p","pp","r","rr","s","ss","t","tt","w"],nm5=["st","sk","sp","nd","nt","nk","mp","rd","ld","lp","rk","lt","lf","pt","ft","ct","t","d","k","n","p","l","g","m","s","b","c","t","d","k","n","p","l","g","m","s","b","c"],nm6=["","","","","","","","","","","","","","","","","","","","","West","East","North","South","Little","Upper","Lower","Fort","Upper West","Upper East","Upper North","Upper South","Lower West","Lower East","Lower North","Lower South","Midtown","Waterside","Bayside","Downtown"],nm7=["","Acre","Avenue","Bazaar","Boulevard","Center","Circle","Corner","Cross","District","East","Garden","Grove","Heights","Hill","Hills","Market","North","Park","Place","Plaza","Point","Road","Row","Side","South","Square","Street","Town","Vale","Valley","West","Wood","Yard"];let names;for(let i=0;i<10;i++){var rnd6=Math.floor(Math.random()*nm6.length);let rnd7=Math.floor(Math.random()*nm7.length);if(rnd6<20)for(;0===rnd7;)rnd7=Math.floor(Math.random()*nm7.length);else rnd7=0;var rnd=Math.floor(Math.random()*nm1.length),rnd2=Math.floor(Math.random()*nm2.length),rnd5=Math.floor(Math.random()*nm5.length);if(i<2)names=nm6[rnd6]+" "+nm1[rnd]+nm2[rnd2]+nm5[rnd5]+"  "+nm7[rnd7];else if(i<4){var rnd3=Math.floor(Math.random()*nm3.length),rnd4=Math.floor(Math.random()*nm2.length);names=nm6[rnd6]+" "+nm1[rnd]+nm2[rnd2]+nm3[rnd3]+nm2[rnd4]+nm5[rnd5]+"  "+nm7[rnd7]}else if(i<8){let rnd3=Math.floor(Math.random()*nm4.length),rnd4=Math.floor(Math.random()*nm2.length);names=nm6[rnd6]+" "+nm1[rnd]+nm2[rnd2]+nm4[rnd3]+nm2[rnd4]+nm5[rnd5]+"  "+nm7[rnd7]}else{let rnd3=Math.floor(Math.random()*nm3.length),rnd4=Math.floor(Math.random()*nm2.length);rnd6=Math.floor(Math.random()*nm4.length),rnd7=Math.floor(Math.random()*nm2.length),names=i<8?nm6[rnd6]+" "+nm1[rnd]+nm2[rnd2]+nm3[rnd3]+nm2[rnd4]+nm4[rnd6]+nm2[rnd7]+nm5[rnd5]+"  "+nm7[rnd7]:nm6[rnd6]+" "+nm1[rnd]+nm2[rnd2]+nm4[rnd6]+nm2[rnd4]+nm3[rnd3]+nm2[rnd7]+nm5[rnd5]+"  "+nm7[rnd7]}}return toTitleCase(names.trim())}function toTitleCase(str){return str.replace(/\w\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}).replace("  "," ")}function GenerateTownName(){var nm1=["b","c","d","f","g","h","l","m","n","p","r","s","t","w","y","b","c","d","f","g","h","j","k","l","m","n","p","q","r","s","t","v","w","x","y","z","bl","br","ch","cl","cr","dr","fl","fr","gl","gr","pl","pr","sc","sh","sk","sl","sm","sn","sp","st","sw","tr","tw","wh","wr","sch","scr","sph","shr","spl","spr","str","thr"],nm2=["a","e","i","o","u","a","e","i","o","u","a","e","i","o","u","a","e","i","o","u","a","e","i","o","u","ai","eo","ea","ee","oo","oa","ia","io"],nm3=["br","bl","c","ch","cl","ct","ck","cc","d","dg","dw","dr","dl","f","g","gg","gl","gw","gr","h","k","kr","kw","l","ll","lb","ld","lg","lm","ln","lr","lw","lz","m","mr","ml","nw","n","nn","ng","nl","p","ph","r","rb","rc","rd","rg","rl","rm","rn","rr","rs","rst","rt","rth","rtr","rw","rv","s","ss","sh","st","sth","str","sl","sw","t","tb","tl","tg","tm","tn","tw","th","tt","v","w","wl","wn","x","z"],nm4=["c","d","f","ff","g","gg","h","l","ll","m","mm","n","nn","p","pp","r","rr","s","ss","t","tt","w"],nm5=["st","sk","sp","nd","nt","nk","mp","rd","ld","lp","rk","lt","lf","pt","ft","ct","t","d","k","n","p","l","g","m","s","b","c","t","d","k","n","p","l","g","m","s","b","c"];let names;for(let i=0;i<10;i++){var rnd=Math.floor(Math.random()*nm1.length),rnd2=Math.floor(Math.random()*nm2.length),rnd5=Math.floor(Math.random()*nm5.length);if(i<2)names=nm1[rnd]+nm2[rnd2]+nm5[rnd5];else if(i<4){var rnd3=Math.floor(Math.random()*nm3.length),rnd4=Math.floor(Math.random()*nm2.length);names=nm1[rnd]+nm2[rnd2]+nm3[rnd3]+nm2[rnd4]+nm5[rnd5]}else if(i<8){let rnd3=Math.floor(Math.random()*nm4.length),rnd4=Math.floor(Math.random()*nm2.length);names=nm1[rnd]+nm2[rnd2]+nm4[rnd3]+nm2[rnd4]+nm5[rnd5]}else{let rnd3=Math.floor(Math.random()*nm3.length),rnd4=Math.floor(Math.random()*nm2.length);rnd6=Math.floor(Math.random()*nm4.length),rnd7=Math.floor(Math.random()*nm2.length),names=i<8?nm1[rnd]+nm2[rnd2]+nm3[rnd3]+nm2[rnd4]+nm4[rnd6]+nm2[rnd7]+nm5[rnd5]:nm1[rnd]+nm2[rnd2]+nm4[rnd6]+nm2[rnd4]+nm3[rnd3]+nm2[rnd7]+nm5[rnd5]}}return toTitleCase(names.trim())}function toTitleCase(str){return str.replace(/\w\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}).replace("  "," ")}let JobTypes=["Apothecary","Artist","Baker","Barber","Blacksmith","Butcher","Farmer","Librarian","Cleric","Carpenter","Candlemaker","Cook","Gardener","Herbalist","Messenger","Guard","Painter","Physician","Potter","Scribe","Shoemaker","Spinster"],VoiceDescriptors=["abrasive","acidic","adenoidal","airy","animated","anxious","authoritative","barbed","barely audible","baritone","barking","bass","big","blasé","bombastic","bored","boyish","bitter","bland","bleak","blunt","booming","brash","braying","breathy","breezy","bright","brisk","brittle","broken","bubbly","burbling","calm","caustic","casual","cheerful","childish","chirping","choked","clear","clipped","cloying","coarse","cold","cool","complacent","contented","contralto","cracking","creaky","croaking","crisp","crooning","curt","cultured","cynical","deep","devoid of emotion","discordant","dispirited","drawling","dreamy","dry","dulcet","dull","earnest","easy","falsetto","faint","feathery","feeble","firm","flat","fierce","forceful","fretful","gentle","girlish","glum","goofy","grating","grave","gravelly","grim","growling","gruff","guttural","hard","harsh","hateful","hearty","hesitant","high-pitched","hissing","hoarse","honeyed","hushed","husky","immense","indifferent","insinuating","intense","ironic","jubilant","lazy","lifeless","light","lilting","lively","loud","loving","low","matter-of-fact","mellifluous","melodious","mild","mocking","monotonous","muffled","musical","muted","nasal","nasty","neutral","nonchalant","obsequious","oily","piercing","piping","polished","quavering","querulous","quiet","ragged","rasping","raucous","raw","reedy","refined","resonant","ringing","roaring","robust","rough","rumbling","saccharine","sarcastic","savage","scornful","scratchy","screeching","serene","severe","shaky","sharp","shrill","sibilant","silken","silly","silvery","sincere","singsong","sleek","sluggish","slurring","sly","small","smarmy","smoky","smooth","snide","soft","solid","somber","sonorous","soothing","soprano","sour","spacey","stark","steely","stiff","stout","strained","strident","stony","suave","suggestive","surly","squeaky","squealing","sugary","sweet","sympathetic","tart","teasing","thick","thin","throaty","thunderous","tight","tender","tense","trembling","tremulous","trilling","uncertain","unctuous","unsteady","vague","velvety","warm","wavering","weak","weary","wheezy","whiny","wistful"],EyeDescriptors=["large","small","narrow","sharp","squinty","round","wide-set","close-set","deep-set","sunken","bulging","protruding","wide","hooded","heavy-lidded","bedroom","bright","sparkling","glittering","flecked","dull","bleary","rheumy","cloudy","red-rimmed","beady","birdlike","cat-like","jewel-like","steely","hard"],EyebrowDescriptors=["arched","straight","plucked","sparse","trim","dark","faint","thin","thick","unruly","bushy","heavy"],SkinDescriptors=["lined","wrinkled","seamed","leathery","sagging","drooping","loose","clear","smooth","silken","satiny","dry","flaky","scaly","delicate","thin","translucent","luminescent","baby-soft","flawless","poreless","with large pores","glowing","dewy","dull","velvety","fuzzy","rough","uneven","mottled","dimpled","doughy","firm","freckled","pimply","pockmarked","blemished","pitted","scarred","bruised","veined","scratched","sunburned","weather-beaten","raw","tattooed"],FaceDescriptors=["square","round","oblong","oval","elongated","narrow","heart-shaped","catlike","wolfish","high forehead","broad forehead","prominent brow ridge","protruding brow bone","sharp cheekbones","high cheekbones","angular cheekbones","hollow cheeks","square jaw","chiseled","sculpted","craggy","soft","jowly","jutting chin","pointed chin","weak chin","receding chin","double chin","cleft chin","dimple in chin","visible Adam’s apple"],NoseDescriptors=["snub","dainty","button","turned-up","long","broad","thin","straight","pointed","crooked","aquiline","Roman","bulbous","flared","hawk","strong"],MouthDescriptors=["thin","narrow","full","lush","Cupid’s bow","rosebud","dry","cracked","chapped","moist","glossy","straight teeth","gap between teeth","gleaming white teeth","overbite","underbite"],FacialHairDescriptors=["clean-shaven","smooth-shaven","beard","neckbeard","goatee","moustache","sideburns","mutton-chop sideburns","stubble","a few days’ growth of beard","five o’ clock shadow"],HairDescriptors=["long","short","shoulder-length","loose","limp","dull","shiny","glossy","sleek","smooth","luminous","lustrous","spiky","stringy","shaggy","tangled","messy","tousled","windblown","unkempt","bedhead","straggly","neatly combed","parted","slicked down","cropped","clipped","buzz cut","crewcut","bob","mullet","curly","bushy","frizzy","wavy","straight","lanky","dry","oily","greasy","layers","corkscrews","spirals","ringlets","braids","widow’s peak","bald","shaved","comb-over","afro","thick","luxuriant","voluminous","full","wild","untamed","bouncy","wispy","fine","thinning"],BodyDescriptors=["tall","average height","short","petite","tiny","compact","big","large","burly","beefy","bulky","brawny","barrel-chested","heavy-set","fat","overweight","obese","flabby","chunky","chubby","pudgy","pot-bellied","portly","thick","stout","lush","plush","full-figured","ample","rounded","generous","voluptuous","curvy","hourglass","plump","long-legged","gangling","lanky","coltish","lissome","willowy","lithe","lean","slim","slender","trim","thin","skinny","emaciated","gaunt","bony","spare","solid","stocky","wiry","rangy","sinewy","stringy","ropy","sturdy","strapping","powerful","hulking","fit","athletic","toned","built","muscular","chiseled","taut","ripped","Herculean","broad-shouldered","sloping shoulders","bowlegged"],HandDescriptors=["delicate","small","large","square","sturdy","strong","smooth","rough","calloused","elegant","plump","manicured","stubby fingers","long fingers","ragged nails","grimy fingernails","ink-stained"],SkinColours=["amber","bronze","cinnamon","copper","dark brown","deep brown","ebony","honey","golden","pale","pallid","pasty","fair","light","creamy","alabaster","ivory","bisque","milk","porcelain","chalky","sallow","olive","peach","rosy","ruddy","florid","russet","tawny","fawn"],EyeColours=["chestnut","chocolate brown","cocoa brown","coffee brown","mocha","mahogany","sepia","sienna brown","mink brown","copper","amber","cognac","whiskey","brandy","honey","tawny","topaz","hazel","obsidian","onyx","coal","raven","midnight","sky blue","sunny blue","cornflower blue","steel blue","ice blue","Arctic blue","glacial blue","crystal blue","cerulean","electric blue","azure","lake blue","aquamarine","turquoise","denim blue","slate","storm blue","silver","chrome","platinum","pewter","smoky gray","ash gray","concrete gray","dove gray","shark gray","fog gray","gunmetal gray","olive","emerald","leaf green","moss green"],HairColours=["black","blue-black","jet black","raven","ebony","inky black","midnight","sable","salt and pepper","silver gray","charcoal gray","steel gray","white","snow-white","brown","brunette","chocolate brown","coffee brown","ash brown","brown sugar","nut brown","caramel","tawny brown","toffee brown","red","ginger","auburn","Titian-haired","copper","strawberry blonde","butterscotch","honey","wheat","blonde","golden","sandy blond","flaxen","fair-haired","bleached","platinum"];function setup(){textAlign(CENTER,CENTER),createCanvas(windowWidth,windowHeight),cell_size=8,grid_offset=(cell_size*grid_width-width)/2,createUiElements(),noLoop()}let debug="";function draw(){if(windowWidth<1e3)background(color_dark);else{rectMode(CORNER),noStroke(),background(color_parchment),push(),translate(transformX,transformY),scale(currentScale);for(var cell of grid)"road"==cell.type&&(fill(cell.color),rect(cell.x*cell_size,cell.y*cell_size,cell_size));for(var building of buildings)building.draw();var t_mouseX,t_mouseY;rectMode(CENTER),"draw_roads"==current_status&&(t_mouseX=(mouseX-transformX)/currentScale,t_mouseY=(mouseY-transformY)/currentScale,fill("rgba(255,255,255, 0.25)"),keyIsDown(SHIFT)&&fill("rgba(255, 145, 0, 0.25)"),rect(Math.floor(t_mouseX/cell_size)*cell_size+cell_size/2,Math.floor(t_mouseY/cell_size)*cell_size+cell_size/2,cell_size+2*road_add_size*cell_size)),pop(),fill(color_dark),rect(0,0,windowWidth,100)}}function registeredClick(mouse_button){var t_mouseX=(mouseX-transformX)/currentScale,t_mouseY=(mouseY-transformY)/currentScale;if("draw_roads"==current_status)drawRoad(t_mouseX,t_mouseY);else{selected_building=void 0;for(var building of buildings)building.selected=!1,pointInPolygon(t_mouseX,t_mouseY,building.points)&&openBuildingDetail(selected_building=building)}}function cleanGrid(){grid=grid.filter(cell=>"dirt"!==cell.type)}function newCity(){cuteAlert({type:"question",title:"Are you sure?",message:"Doing this will remove your entire city. Be sure to save before committing to this!",confirmText:"Go!",cancelText:"Cancel"}).then(e=>{"confirm"==e&&generateCity()})}function generateCity(){btn_draw_roads.removeAttribute("disabled",""),btn_generate_city.removeClass("click_me"),btn_generate_buildings.removeAttribute("disabled",""),btn_confirm_city.attribute("disabled",""),btn_draw_roads.removeAttribute("hidden",""),btn_generate_buildings.removeAttribute("hidden",""),btn_confirm_city.removeAttribute("hidden",""),btn_open_city_details.attribute("hidden",""),town_name.value(GenerateTownName()),grid_width=size_slider.value(),grid_height=grid_width,min_road_x=grid_width,min_road_y=grid_height,generateRoads()}function confirmCity(){cleanGrid(),current_status="city_finished",btn_draw_roads.attribute("hidden",""),btn_generate_buildings.attribute("hidden",""),btn_confirm_city.attribute("hidden",""),btn_open_city_details.removeAttribute("hidden",""),btn_draw_roads.removeClass("click_me"),btn_generate_buildings.removeClass("click_me"),btn_confirm_city.removeClass("click_me"),btn_generate_city.removeClass("click_me")}function createUiElements(){(header_container=createElement("div")).addClass("header_container"),header_container.position(0,0),(left_items=createElement("div")).addClass("side_items"),(new_city_container=createElement("div")).addClass("new_city_button"),(btn_generate_city=createButton("🆕")).mouseClicked(newCity),btn_generate_city.addClass("click_me"),(size_slider=createSlider(100,350,150,10)).style("width","95px"),size_slider.addClass("size_slider"),new_city_container.child(btn_generate_city),new_city_container.child(size_slider),(btn_draw_roads=createButton("🚧")).mouseClicked(()=>{current_status="draw_roads",btn_draw_roads.removeClass("click_me")}),(btn_generate_buildings=createButton("🏠")).mouseClicked(generateBuildings),(btn_confirm_city=createButton("✅")).mouseClicked(confirmCity),btn_confirm_city.attribute("disabled",""),(btn_open_city_details=createButton("📜")).mouseClicked(()=>{closeExistingPanes("city_details")||openCityDetail()}),btn_open_city_details.attribute("hidden",""),left_items.child(new_city_container),left_items.child(btn_draw_roads),left_items.child(btn_generate_buildings),left_items.child(btn_confirm_city),left_items.child(btn_open_city_details),(town_name=createInput("")).addClass("townNameInput"),town_name.value("Generate your town..."),(right_items=createElement("div")).addClass("side_items"),(btn_save=createButton("💾")).mouseClicked(saveToJson),btn_load=createFileInput(loadFromJson),(label_load=createElement("label","📂")).child(btn_load),right_items.child(btn_save),right_items.child(label_load),header_container.child(left_items),header_container.child(town_name),header_container.child(right_items),btn_draw_roads.attribute("disabled",""),btn_generate_buildings.attribute("disabled","")}